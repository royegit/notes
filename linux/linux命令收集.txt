

pvxlswqnwirrcade    154256500@qq.com 邮箱授权码


https://www.vultr.com/
https://www.vultr.com/docs/one-click-lamp   vultr
http://www.sinacloud.com/ucenter.html?ticket=058d219c95d6dd0c1cd1b40c0754d4cd6b4d9966  新浪云
https://www.kancloud.cn/fangbei/weixin/283546
Adfg%67#@
S&t!%$6&ct.!*^vtr
S&t!%$6&ct.!*^7ml
S&t!%$6&ct.!*^yu^
S&t!%$6&ct.!*^m*c
S&t!%$6&ct.!*^k&^
f=F7pk@ye{y*w7B1  root linux
S&t!%6&ct!*^xxu
werqwer

udzSffoe0ZJzVRz  S&t!%6&ct!*^vtr

royel.top

269571
794083

http://www.royel.top
https://mp.weixin.qq.com/debug/


3509512229

S&t!%6&ct!*^%!^&



#%er53@5t78in

S&t!%6&ct!*^%!^&

S&t!%6&ct!*^7!t8ub

用户登录
服务器生成session文件
同时当服务器返回信息时客户端也会在客户端生成cookie
然后在次请求时浏览器只用cookie来请求数据

然后隐藏的xss攻击，先是盗取cookie中的用户名密码然后发送恶意代码

xss是存储在数据库的留言板或是其他存储文章的数据表

盗取别人的cookie，然后自己应cookie模拟别人登陆。
当用户登录的时候，可以重定向将他的登录cookie 用一种get的方式提交到 你自己的服务器， 这样就能远程的获取别人的登录cookie。


标记httponly的cookie的  不能通过JavaScript获取。


S&t!%6&ct!*^c%4^

S&t!%6&ct!*^%!^&

XSS的攻击方式


git clone root@209.250.252.225:royeweb/laotai.git

/home/roye/Downloads/lnmp1.5/nginx-rtmp-module

下载链接：https://pan.baidu.com/s/1bwfJi6MHuAY0fQmmD_uWIw
分享密码：trnj
解压密码：2696690555.COM


./configure --with-php-config=/usr/local/php/bin/php-config --enable-openssl  --enable-http2  --enable-sockets --enable-mysqlnd




https://www.swoole.com/

https://code.google.com/archive/p/phpsocks5/

https://paragonie.com/book/pecl-libsodium/read/00-intro.md



https://www.cnblogs.com/kevingrace/p/6601088.html  增量备份
http://www.finalshares.com/read-6543?f=gn&n=9  githook+rsync实现web自动部署


====  同一区
&&&&  同一内容
----  命令窗

CentOS02

LD_LIBRARY_PATH=/usr/local/libmcrypt/lib:/usr/local/lib    ./configure --with-libmcrypt-prefix=/usr/local/libmcrypt

===================================================================================================



		shift+o 在光标所在的行换行然后进入输入状态

	linux 的基本操作

	安装 linux 之后需要的最基本的安装程序
	yum install gcc gcc-c++ gcc-g77 flex bison autoconf automake bzip2-devel zlib-devel ncurses-devel libjpeg-devel libpng-devel libtiff-devel freetype-devel pam-devel openssl-devel libxml2-devel gettext-devel pcre-devel mysql-devel net-snmp-devel curl-devel perl-DBI

	egrep "log-bin|server-id" /data/3306/my.cnf   //在my.cnf文件中查询log-bin和server-id字符


	 sync; echo 3 > /proc/sys/vm/drop_caches  //linux 回收内存

	SecureCRT 远程登录工具
	xsell 	  远程登录工具

	df -h 查看磁盘挂载信息（report file system disk space usage）
	du -sh 查看文件及目录大小
	date 命令 -s 修改时间
	time 计算一个任务执行时间
	screen  后台运行命令
	shutdown [选项] 时间  -c 取消前一个关机命令;-h now(关机) -r now(重启)
	rpm -qpi *.rpm  查看软件包里的内容
	rpm -qpl *.rpm 查看软件包将会在系统里安装那些部分
	mkdir  -p /tmp/japan/boduo #递归创建
	mkdir -p /data/{3306,3307}/data  #递归创建 {3306,0007} 创建/data/ 并在data目录下创建 3306和3307目录并且在3306和3307目录下分别创建data目录
	mkfs 格式化命令 -t 文件系统类型mkfs,ext3
	rmdir [目录名] 删除目录
	rm -r 删除目录
	route -n  查看当前机器的网关
	halt 关机（init 0）
	hostname #查看主机名
	NETWORKING=yes
	HOSTNAME=myhostname
	[root@localhost ~]# reboot
	[root@myhostname ~]#
	cat -n /etc/issue  显示文件内容加行号
	cut 按列切割 -d 指定分割符，-f 数字选列，-c 按字符
	chomd 改变文件访问权限分为数字和字符表示法，-R 递归
	chown 改变文件用有者以及用户组，-R递归
	cp -r /root  复制目录
	curl ifconfig.me 查看本机外网ip地址
	tac /etc/issue 文件内容倒过来显示
	more /etc/services  显示文件内容 回车按行往下找 ，空格或f可以按页往后翻按q退出
	tail -n 3 /etc/services   查看services 文件末尾的3行
	write roye 按 回车 写入信息内容  按 ctrl+d  给 roye用户发送信息（前提条件是必须是在线用户）
	wall 写入信息内容   给所有在线用户发送信息
	mail root 回车 输入邮件标题 回车 输入邮件信息  按 ctrl+d  给root用户发送邮件
	mail +回车 查看当前用户的邮件
	traceroute www.sina.com  查看访问 www.sina.com 网站都经过了那些节点（通常如果网络不通会利用这个命令查看网络到了哪个节点就断了）
	netstat -tlun 查看本机监听的端口
	netstat -an 查看本机所有的网络连接
	netstat -rn 查看本机路由表


	uname -a 查看linux系统所有内核相关信息
	uname -r  查看linux内核版本
	uname -s  查看linux内核名称
	file /bin/ls 查看linux系统的位数
	fdisk 磁盘分区的命令 -l 查看列表小于2T 的分区工具。
	last 查看目前和过期所有用户的登录信息
	lastlog 查看用户上次登录的时间
	lastlog -u 502  查看uid为 502的用户信息
	ll -i  /tmp  #查看硬链接：查看 i 的节点号查看是否为硬链接 ，如果系统中有两个文件的 i节点号是相同的则为同一个文件的硬链接
	ls | wc -l    统计当前文件夹下有多少个文件，文件夹
	ls -lh  可用显示文件大小以k或者M或者G的显示
	ls -ld  显示当前目录本身
	lsb_release -a  查看linux是用到red head 还是CentOS还是别的什么发行版本的操作系统
	lsof [-c|-u|-p]  列出进程打开或使用的文件信息。-c 字符串：只列出一字符串开头的进程打开的文件；-u 用户名：只列出某个用户的进程打开的文件; -p pid：列出某个PID进程打开的文件
	init 3 #从图形界面切换到命令界面
	init 5 #切换到图形界面(前提是安装时有图形界面)
	rename ".HTML"  ".html" * #把.HTML改为*批量改成.html; *表示批量
	reboot 重启(init 6)
	mount 挂载的命令 -t 文件系统类型 -o挂载的选项 -a
	umount 卸载的命令 -lf 强制卸载
	uniq 去重 -c 计数
	sort 排序，-n,-r,-t,-k,-u 常用参数
	printf 格式化打印
	rz -y	从本地上传覆盖
	sz -y ca.crt test.crt test.key client.conf #这是在服务器端下载文件的命令
	LANG=EN  #调整字符集
	grep -vE ";|#|^$" server.conf  #在文件中 查找内容 但是包含 ;和#还有 ^$空格过滤掉
	systemctl stop NetworkManager  #临时关闭网络管理命令
	systemctl disable NetworkManager  #永久关闭网络管理命令
	systemctl restart network 		  #重启网卡设备
	systemctl enable NetworkManager-wait-online.service  #开机启动网络管理命令
	service network restart
	tcpdump -nnn -s 10000|grep ICMP	#抓包
	tcpdump -i eth0 -nnn -s 10000 'port 52115 and src host 10.0.0.27' #抓包

	echo $RANDOM|md5sum|cut -c 1-8  #生成随机数并进行md5加密然后截取八位数
	echo $(($RANDOM+11111111))  	#生成8位随机数
	openssl rand -base64 8			#生成8位随机数
	date +%s%N						#生成随机数

	[root@localhost ~]# a="I am gggggg."   #定义变量a并赋值
	[root@localhost ~]# echo ${#a}         #计算a变量的长度
	[root@localhost ~]# echo ${a}|wc -L    #计算a变量的长度
	[root@localhost ~]# expr length "${a}" #计算a变量的长度

【必要的软件安装】
	 yum install tree -y  #tree 安装

	&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

	服务器的压力测试的安装与使用

	yum -y install http-tools
	ab -n 100 -c 100 http://localhost   对apache 或 nginx 的压力测试 同一时间内100的点击量

	&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
	&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

	linux 定义命令别名

	vim 打开 /root/.bashrc
	[root@localhost extra]# vim /root/.bashrc

	配置apache的启动和关闭的命令

	------------------------------------------------------------------------
	# .bashrc

	# User specific aliases and functions

	alias rm='rm -i'
	alias cp='cp -i'
	alias mv='mv -i'
	alias sto='/usr/local/apache2/bin/apachectl stop';
	alias sta='/usr/local/apache2/bin/apachectl start';
	# Source global definitions
	if [ -f /etc/bashrc ]; then
			. /etc/bashrc
	fi
	~
	------------------------------------------------------------------------

	注意：定义命令别名不能与系统命令重名不然系统命令失效

	&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
	&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

	挂载光盘到硬盘
	mkdir -p /mnt/cdrom
	chmod 777 /mnt
	mount -t iso9660 /dev/cdrom  /mnt/cdrom

	配置 /etc/yum.repos.d/server.repo
	[cdrom]
	name=cdrom
	baseurl=file://mnt/cdrom
	enabled=1
	清除原有的yum 信息
	yum clean all
	查看yum 信息
	yum list
	&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&



	history | grep cp           //搜索历史纪录关键词
	history | grep sersync
===================================================================================================
	linux 增量备份

	rsync -azv --delete ./test/*  /data/wap_zouba/


	grep -rn 'latarcyrheb' *    //在文件夹内查找那个文件里有latarcyrheb这个字符串

	rpm -ql rsync    			//找rsync软件安装的文件目录

	rpm -qa rsync  				//查看rsync 是否安装

	DST：目的地址

	SRC：原地址



	ty_store_smg_setting

==========================================================================================================

////////////////
//   mysql 区 //
////////////////

#配置文件 /etc/my.cnf 添加错误日志参数，一切问题都解决
[mysqld safe]
log-error=/data/mysql/logs/error.log

rpm -qa|grep -i mysql  //查看mysql是否安装

mysql 卸载
rpm -e  MySQL-client-5.5.25-1.rhel5 --nodeps
rpm -ev MySQL-client-5.5.25-1.rhel5 --nodeps 强制卸载


mysql-bin.0000*日志是用于分布式同步使用的，如果只有一台机器完全可以关闭该日志
vim /etc/my.cnf
注释 #log-bin=mysql-bin 即可

ps -ef|grep mysqld 查看mysqld进程


mysqlbinlog  --on-debaults  ../data/mysql-bin.000001  查看msyql日志



=======================================================================================================================================



==========================================================================================================================================
paragraph     				段落
Decrease Heading Level     	减少标题级别
Increase Heading Level     	增加标题级别
Table             		    表单
Code Fences       		    代码栅栏
Math Block        		    重点
Quote 			  		    引用
Ordered List      		    有序列表
Unordered List    		    无序列表
task list         		    任务列表
Link Reference    		    插入URL连接
Footnotes         		    注释
Horizontal Line   		    水平线
Table of Content  		    目录表
clear format      		    清除格式

=============================================================================================================================================

linux 开启和关闭防火墙  关闭 SElinux


###关闭 SElinux

vim /etc/selinux/config打开selinux配置文件
修改 SELINUX=disabled  之后
reboot重启


###开启和关闭防火墙

####CentOS6关闭防火墙使用以下命令，

//临时关闭
service iptables stop
//禁止开机启动
chkconfig iptables off

iptables -L //查看防火墙是否关闭



####CentOS7关闭防火墙使用以下命令，

//临时关闭
systemctl stop firewalld
//禁止开机启动
systemctl disable firewalld
Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.


firewall-cmd --permanent --zone=public --add-port=28932/tcp		#防火墙开启52115端口


curl -sS https://getcomposer.org/installer | PHP
mv composer.phar / usr / local / bin / composer


=============================================================================================================================================

linux下 free 命令详解    <==检查内存的使用情况

free 的参数

-b 　以Byte为单位显示内存使用情况。
-k 　以KB为单位显示内存使用情况。
-m 　以MB为单位显示内存使用情况。
-h 　以合适的单位显示内存使用情况，最大为三位数，自动计算对应的单位值。

单位有：
B = bytes
K = kilos
M = megas
G = gigas
T = teras

# free -s 3 //每3s 执行一次命令

[root@instance-1 ~]# free -h -s 3     <==(-h:表示将 )检查内存的使用情况
              total        used        free      shared  buff/cache   available
Mem:           587M        344M        121M        712K        120M        153M
Swap:          1.0G        648M        375M

              total        used        free      shared  buff/cache   available
Mem:           587M        344M        121M        712K        120M        153M
Swap:          1.0G        648M        375M

              total        used        free      shared  buff/cache   available
Mem:           587M        344M        121M        712K        120M        153M
Swap:          1.0G        648M        375M

telnet 34.125.20.111 28932

Mem  行(第二行)系统物理内存的使用情况。
Swap 行(第三行)swap交换内存的使用情况。
total 列显示系统总的可用物理内存和交换空间大小（内存总数）。
used 列显示已经被使用的物理内存和交换空间（已经使用的内存数）。
free 列显示还有多少物理内存和交换空间可用使用（空闲的内存数）。
shared 列显示被共享使用的物理内存大小。
buff/cache 列显示被 buffer 和 cache 使用的物理内存大小（缓存内存数）。
available 列显示还可以被应用程序使用的物理内存大小。




# 解压当前目录下的所有 *.tar.gz 压缩文件

for n in `ls *.gz`;do docker load -i $n ;done


