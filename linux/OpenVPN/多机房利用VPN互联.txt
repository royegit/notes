01-VPN 概述接收与图解
02-VPN 的作用介绍与图解
03-VPN 的企业应用分类介绍与图解
04-常见隧道协议介绍（PPTP,L2TP,IPSEC,SSLVPN）
05-实现VPN功能的常见开源产品及实际应用特点介绍
06-根据企业生产场景需求选择VPN产品及方案建议
07-openvpn 开源vpn产品介绍
08-openvpn 依赖SSL与TLS协议介绍
09-openvpn依赖的SSL与TLS协议通信过程原理详解

10-openvpn 的加密通信原理过程
11-openvpn 的8种身份验证方式介绍
12-openvpn 通信原理
13-openvpn 生成环境常用场景-远程访问
14-openvpn 生产环境常用场景-企业或机房互联
15-openvpn 生产环境常用场景-企业和外部互联
16-企业vpn远程拨号访问场景逻辑图
17-企业活啊IDC机房网络互联场景逻辑图
18-VPN生产场景逻辑图详细描述
19-openvpn实战部署-环境需求介绍
20-openvpn实战部署-大规模集群下vpn架构
21-openvpn实战部署-openvpn实战环境搭建
22-建立规范目录下载并安装Openvpn相关依赖软件
23-安装openvpn软件并检查是否安装成功
24-生产vpn服务器端证书和密钥文件
25-生成vpn服务器端证书和密钥文件方案1
26-生成vpn服务器端证书和密钥文件方案2
27-详解服务器及客户端的证书文件用途

28-详解服务器端VPN server.conf重要参数
29-修改server.conf配置实际服务器端VPN服务端
29-启动服务端的VPN服务并检查
30-调试服务端VPN服务启动环境
31-配置常规方式启动openvpn服务
32-服务端openvpn常规启动故障与排错
33-下载并安装win32 openvpn客户端软件
34-下载客户端证书并进行客户端VPN配置
35-在win7客户端拨号远程连接openvpn服务
36-win7客户端远程连接openvpn服务常见故障
37-验证vpn的联通性并对比客户端路由信息变化
38-尝试连接vpn服务的内容不网络机器并分析问题
39-跟踪vpn走向深入理解VPN的数据包流向路由规则
40-通过tcpdump逐层抓包实战理解路由方式VPN的运行原理
41-配置VPN路由实现路由方式VPN架构方案
42-配置路由方式VPN架构方案的特点和应用场景分析
43-通过tcpdump逐层抓包实战理解NAT方式VPN方案的运行原理
44-防火墙命令介绍以及实现NAT方式VPN方案的实战

45-利用防火墙脚本实现NAT方式的防火墙控制策略
46-NAT方式VPN架构方案的适合应用场景分析
47-路由方式和NAT方式企业实际应用区别和异同小结
48-企业openvpn服务维护常见问题-增加多个证书
49-企业openvpn服务维护常见问题-多用户共享证书
50-企业openvpn服务维护常见问题-查看用户登录
51-企业openvpn服务维护常见问题-撤销单个证书
52-企业openvpn服务维护常见问题-撤销多个证书
53-安装linux下openvpn的客户端
54-启动openvpn client服务并检查
55-openvpn client故障排查
56-通过tcpdump抓包理解openvpn连接时数据通信过程
57-测试linux openvpn client连接vpn服务器内部机器
58-多个IDC机房利用VPN互联架构方案实现
59-多个IDC机房利用VPN互联架构方案抓包分析
60-多个IDC机房利用VPN互联架构方案应用场景 
60-南陵和世纪互联两机房VPN解决架构方案实现案例
61-多个IDC机房利用VPN互联架构方案问题与替代方案
62-openvpn翻墙架构解决方案需求说明
63-openvpn通过服务器代理翻墙实战
64-检验openvpn翻墙方案成果并结合实战理解原理
















多个IDC机房利用VPN互联架构方案应用场景
	1、企业之间互联
	2、多机房互联
		a、数据同步，备份数据。
		b、异地数据读取（北京机房web服务写数据到济南机房的MySQL。是否可以读？），读写比：几十比一。
		远程写问题不大，远程读。企业用远程写数据库，然后在本地做一个MySQL Slave，本地数据库。
		同一个业务跨机房集群的架构。通过VPN传数据。尽量远程写，本地读。
		c、
大多个IDC机房利用VPN互联架构方案文题与替代方案
	带宽，替代拉光纤。百度就是一个案例。
		
		
		
		比较简单的跨机房互联的方案
		
			vpn客户端									vpn服务器
		Lserver:vpnclient 			互联网			   Lserver:vpnclient 
		eth0:10.0.0.29    <------------------------->  eth0:10.0.0.29
		eth1:192.168.1.19 							   eth1:192.168.1.19								
		Gw:10.0.0.254     ╲						 ↗Gw:10.0.0.254
			↑              	╲						/	↑
			|             	  ╲				   /	|
			|             	 	╲				  /		|
			|   上海机房  	 	  ╲			 /		|   北京机房
			|             	  		╲			/		|
			|             	   		  ╲	   /		|
		Lclient:          				╲	  /			|
		eth0:192.168.1.17 				  ╲ /			|
		Gw:192.168.1.29   					╲			|
										   /  ╲		|
										  /		╲		|
										 /		  ↘	|
										/			Lclient:
									   /			eth0:192.168.1.17
								外部笔记本			Gw:192.168.1.29
								vpn客户端
		
		
		这个架构的思路是把上海的机房的一个服务器当成是北京VPN服务器的客户端。
		然后利用上海内网卡的IP当成是上海机房所有机器的网关达到互联
		
实现企业多机房vpn互联条件流程总结
1、环境搭建（VPN做为网关或不作为网关）
2、防火墙SELINUX转发。
3、vpn server 配置路由到vpn client参数
4、路由route ,默认网关或网段路由
5、tcpdump测试抓包。
6、配置开机所有服务和命令生效
Route,tcpdump （需要深入了解的两个命令，因为教程有一再的强调）		
		
	企业多机房vpn互联故障排错精华
		1、iptable等防火墙是否影响。影响端口服务和转发。
		2、selinux也有可能影响。
		3、网关自身的转发配置
		解决思想
		正确的人的软件思想，软件一般都会已经有了。找官方文档，一般有这样的解决方案。
		
		
		
		
	openvpn的负载均衡和高可用
		方案一：在vpn客户端使用多个配置文件实现（由用户选择拨号）
		方案一、需求分析与操作过程讲解
		基本说明:
			生产场景中比较规范的做法是让所有的VPN SERVER尽可能共享同一套server,ca 证书
			或者连接同一个认证系统（即使是跨机房）。这样只要一份客户端认证和文件和多份指定不同vpn server 的配置
			文件即可实现vpn的负载均衡了。
			
	操作步骤：
		1、配置多个独立的VPN SERVER。10.0.0.28/10.0.0.29
		2、共享两台VPN server 的ca和 server 证书及密钥
		3、有一套客户端密钥文件即可。但是VPN连接文件要多个。
		4、测试连接VPN
		首先要把一份服务端keys拷贝到所有VPN SERVER 的服务器上，然后再客户端本地有多个不同的客户端拨号配置文件
	（仅仅配置文件连接的服务器IP有差别），由用户选择拨号。这种方法也同样适合同一认证系统如（本地文件，数据库，RADIUS、LDAP、active directory）认证。
		
	总结结论：
		1）该负载均衡方案操作简单，不引入多余服务（后面的方案都会引入服务），因此不会增加多余的单点故障，当用户连接VPN不能使用时，用户就可以人工
	选择拨号其他的VPN服务器。
		2）如果使用者为公司内部工作人员，此种方案是值得推荐的。<---老男孩老师推荐。
		3）从广义上讲这是在用户端实现的负载均衡方案，类似早期的华军下载站一样，由用户选择下载站点，而不是用什么只能的DNS等复杂的业务模式。
		
		
		
	
	方案二、通过客户端配置文件实现负载均衡（客户端文件里随机连接服务器）
	
	
	
	+--------------------------------------------------------------------------------------------------------------------+
	|										一份 server ca client 证书和密钥									 		 |	
	|					+---------------+ 				+---------------+					+---------------+		 	 |
	|   				|  VPN SERVER1  | 				|  VPN SERVER2  |					|  VPN SERVER3  |		 	 |
	|   				+---------------+ 				+---------------+					+---------------+		 	 |
	+--------------------------------------------------------------------------------------------------------------------+
								\								|								/		
								 \						    	|							   /
								  \								|							  /					在客户端的配置文件中 配置 三个服务器remote地址
								   \							|							 /					如果有那台机器宕机了vpn60秒后会自动拨号，假设如果第
									\							|							/					一个remote服务器宕机了vpn60秒后会自带拨号连上另外的两台remote服务器
									 \							|						   /					 +------------------------------------+
									  \							|						  /						 |	+---------------------------+	  |
									   \						|						 /						 |	|c-oldboy.ovpn				|	  |
									    \						|						/						 |  |remote server1.mydomain	|	  |
								+----------------------------------------------------------------------+		 |  |remote server2.mydomain 	|	  |
								|																	   |		 |  |remote server3.mydomain 	|	  |
								|							运维人员PC 								   |		 |  +---------------------------+	  |
								|																	   |		 |  remote-random                	  |
								+----------------------------------------------------------------------+		 |  resolv-retry 60              	  |
																												 +------------------------------------+
				方案二、特点及应用场景
						1）该负载均衡方案操作简单，不引入多余服务（后面的方案都会引入服务），因此不会增加多余的单点故障，当用户连接的vpn不能使用时
						，电脑可以重新再次自带拨号连接vpn服务器。
						2）此种方案是最值得推荐的。<---如果是使用者为外部人员，那么这个方案依然是可以的。
						3）本方案是比较标准的在vpn用户端，由客户端配置参数实现的负载均衡的方案，是非常值得推荐的方案。
						4）和方案1对比，方案2的配置更简单，仅需一个配置文件多个remote参数，拨号时客户端会随机自带选择拨
						号，方案1则要手动选择不同的配置文件拨号。当正在连接的VPN服务端宕机时，那么此时方案2不需要人工干预，
						客户端的VPN会自动判断并且自动重新连接其他的可用vpn服务器
																												 	
		
				方案三、		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		